From 1a8a4465bb0438bf2574569b447293d141983a01 Mon Sep 17 00:00:00 2001
From: Geoff Levand <geoff@infradead.org>
Date: Wed, 9 Oct 2019 17:04:03 -0700
Subject: [PATCH 15/17] binfmt: Mods 1

Signed-off-by: Geoff Levand <geoff@infradead.org>
---
 arch/arm64/Kconfig          |  1 +
 fs/Kconfig.binfmt           |  4 ++
 fs/Makefile                 |  1 +
 fs/binfmt_arm64_ilp32_elf.c | 83 ++++++++++++++-----------------------
 4 files changed, 36 insertions(+), 53 deletions(-)

diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index 04b77ee44dee..7ec05366a303 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -1286,6 +1286,7 @@ endif
 config ARM64_ILP32
 	bool "Kernel support for ILP32"
 	select COMPAT
+	select BINFMT_ARM64_ILP32 if BINFMT_ELF
 	default y
 	help
 	  This option enables support for AArch64 ILP32 user space.  ILP32
diff --git a/fs/Kconfig.binfmt b/fs/Kconfig.binfmt
index 62dc4f577ba1..dc0142b9cf01 100644
--- a/fs/Kconfig.binfmt
+++ b/fs/Kconfig.binfmt
@@ -36,6 +36,10 @@ config COMPAT_BINFMT_ELF
 config ARCH_BINFMT_ELF_STATE
 	bool
 
+config BINFMT_ARM64_ILP32
+	bool
+	depends on ARM64_ILP32 && BINFMT_ELF
+
 config BINFMT_ELF_FDPIC
 	bool "Kernel support for FDPIC ELF binaries"
 	default y if !BINFMT_ELF
diff --git a/fs/Makefile b/fs/Makefile
index 14231b4cf383..7e531c53fe53 100644
--- a/fs/Makefile
+++ b/fs/Makefile
@@ -45,6 +45,7 @@ obj-$(CONFIG_BINFMT_ELF)	+= binfmt_elf.o
 obj-$(CONFIG_COMPAT_BINFMT_ELF)	+= compat_binfmt_elf.o
 obj-$(CONFIG_BINFMT_ELF_FDPIC)	+= binfmt_elf_fdpic.o
 obj-$(CONFIG_BINFMT_FLAT)	+= binfmt_flat.o
+obj-$(CONFIG_BINFMT_ARM64_ILP32)	+= binfmt_arm64_ilp32_elf.o
 
 obj-$(CONFIG_FS_MBCACHE)	+= mbcache.o
 obj-$(CONFIG_FS_POSIX_ACL)	+= posix_acl.o
diff --git a/fs/binfmt_arm64_ilp32_elf.c b/fs/binfmt_arm64_ilp32_elf.c
index b7f9ffa1d5f1..76e48df06f92 100644
--- a/fs/binfmt_arm64_ilp32_elf.c
+++ b/fs/binfmt_arm64_ilp32_elf.c
@@ -1,21 +1,16 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
- * 32-bit compatibility support for ELF format executables and core dumps.
+ * Support for ARM64 ILP32 ELF executables.
  *
  * Copyright (C) 2007 Red Hat, Inc.  All rights reserved.
  *
- * Red Hat Author: Roland McGrath.
- *
- * This file is used in a 64-bit kernel that wants to support 32-bit ELF.
- * asm/elf.h is responsible for defining the compat_* and COMPAT_* macros
- * used below, with definitions appropriate for 32-bit ABI compatibility.
- *
  * We use macros to rename the ABI types and machine-dependent
  * functions used in binfmt_elf.c to compat versions.
  */
 
 #include <linux/elfcore-compat.h>
 #include <linux/time.h>
+#include <linux/thread_info.h>
 
 /*
  * Rename the basic ELF layout types to refer to the 32-bit class of files.
@@ -45,11 +40,14 @@
  * The machine-dependent core note format types are defined in elfcore-compat.h,
  * which requires asm/elf.h to define compat_elf_gregset_t et al.
  */
+#undef compat_elf_gregset_t
+#define compat_elf_gregset_t	elf_gregset_t
+
 #define elf_prstatus	compat_elf_prstatus
 #define elf_prpsinfo	compat_elf_prpsinfo
 
 #undef ns_to_timeval
-#define ns_to_timeval ns_to_old_timeval32
+#define ns_to_timeval ns_to_compat_timeval
 
 /*
  * To use this file, asm/elf.h must define compat_elf_check_arch.
@@ -57,61 +55,40 @@
  * differ from the native ones, or omitted when they match.
  */
 
-#undef	ELF_ARCH
 #undef	elf_check_arch
-#define	elf_check_arch	compat_elf_check_arch
+#define	elf_check_arch(x)		(((x)->e_machine == EM_AARCH64)	\
+					&& (x)->e_ident[EI_CLASS] == ELFCLASS32)
 
-#ifdef	COMPAT_ELF_PLATFORM
 #undef	ELF_PLATFORM
-#define	ELF_PLATFORM		COMPAT_ELF_PLATFORM
-#endif
+#if defined(__AARCH64EB__)
+#define	ELF_PLATFORM		("aarch64_be:ilp32")
+#else
+#define	ELF_PLATFORM		("aarch64:ilp32")
+#endif /* defined(__AARCH64EB__) */
 
-#ifdef	COMPAT_ELF_HWCAP
-#undef	ELF_HWCAP
-#define	ELF_HWCAP		COMPAT_ELF_HWCAP
-#endif
-
-#ifdef	COMPAT_ELF_HWCAP2
-#undef	ELF_HWCAP2
-#define	ELF_HWCAP2		COMPAT_ELF_HWCAP2
-#endif
+#undef	SET_PERSONALITY
+#define	SET_PERSONALITY(ex)						\
+do {									\
+	set_bit(TIF_32BIT, &current->mm->context.flags);	\
+	set_thread_flag(TIF_ILP32);				\
+	clear_thread_flag(TIF_32BIT);					\
+} while (0)
 
-#ifdef	COMPAT_ARCH_DLINFO
 #undef	ARCH_DLINFO
-#define	ARCH_DLINFO		COMPAT_ARCH_DLINFO
-#endif
+#define	ARCH_DLINFO							\
+do {									\
+	NEW_AUX_ENT(AT_SYSINFO_EHDR,					\
+		    (elf_addr_t)(long)current->mm->context.vdso);	\
+} while (0)
 
-#ifdef	COMPAT_ELF_ET_DYN_BASE
 #undef	ELF_ET_DYN_BASE
-#define	ELF_ET_DYN_BASE		COMPAT_ELF_ET_DYN_BASE
-#endif
-
-#ifdef COMPAT_ELF_EXEC_PAGESIZE
-#undef	ELF_EXEC_PAGESIZE
-#define	ELF_EXEC_PAGESIZE	COMPAT_ELF_EXEC_PAGESIZE
-#endif
+#define	ELF_ET_DYN_BASE	COMPAT_ELF_ET_DYN_BASE
 
-#ifdef	COMPAT_ELF_PLAT_INIT
-#undef	ELF_PLAT_INIT
-#define	ELF_PLAT_INIT		COMPAT_ELF_PLAT_INIT
-#endif
+#undef	ELF_HWCAP
+#define	ELF_HWCAP			((u32) cpu_get_elf_hwcap())
 
-#ifdef	COMPAT_SET_PERSONALITY
-#undef	SET_PERSONALITY
-#define	SET_PERSONALITY		COMPAT_SET_PERSONALITY
-#endif
-
-#ifdef	compat_start_thread
-#undef	start_thread
-#define	start_thread		compat_start_thread
-#endif
-
-#ifdef	compat_arch_setup_additional_pages
-#undef	ARCH_HAS_SETUP_ADDITIONAL_PAGES
-#define ARCH_HAS_SETUP_ADDITIONAL_PAGES 1
-#undef	arch_setup_additional_pages
-#define	arch_setup_additional_pages compat_arch_setup_additional_pages
-#endif
+#undef	ELF_HWCAP2
+#define	ELF_HWCAP2			((u32) (cpu_get_elf_hwcap() >> 32))
 
 /*
  * Rename a few of the symbols that binfmt_elf.c will define.
-- 
2.17.1

